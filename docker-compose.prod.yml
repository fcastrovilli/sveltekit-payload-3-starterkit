services:
  db:
    image: postgres:16.3-alpine3.20
    container_name: db
    volumes:
      - ./db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
  migrator:
    build:
      context: ./
      dockerfile: Dockerfile.migrator
    container_name: migrator
    command: ["pnpm", "payload", "migrate"]
    restart: no
    environment:
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - DATABASE_URI=postgressql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${DB_PORT:-5432}/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
        restart: true
  cms:
    build: ./apps/cms
    container_name: cms
    environment:
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - DATABASE_URI=postgressql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${DB_PORT:-5432}/${POSTGRES_DB}
    depends_on:
      migrator:
        condition: service_completed_successfully
      db:
        condition: service_healthy
        restart: true
  web:
    build: ./apps/web
    container_name: web
    environment:
      - NODE_ENV=production
      - ORIGIN=${ORIGIN}
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - DATABASE_URI=postgressql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${DB_PORT:-5432}/${POSTGRES_DB}
    depends_on:
      migrator:
        condition: service_completed_successfully
      db:
        condition: service_healthy
        restart: true
